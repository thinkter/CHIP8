import sys

class Chip8():
    memory = [0] * 4096
    reg = [0]* 16 
    display = [0] * 64*32
    key_inputs = [0]*16
    soundTimer = 0
    delayTimer = 0
    index = 0
    pc = 0
    stack = []
    opcode = 0
    shouldDraw = False
    fonts = [0xF0, 0x90, 0x90, 0x90, 0xF0, # 0
           0x20, 0x60, 0x20, 0x20, 0x70, # 1
           0xF0, 0x10, 0xF0, 0x80, 0xF0, # 2
           0xF0, 0x10, 0xF0, 0x10, 0xF0, # 3
           0x90, 0x90, 0xF0, 0x10, 0x10, # 4
           0xF0, 0x80, 0xF0, 0x10, 0xF0, # 5
           0xF0, 0x80, 0xF0, 0x90, 0xF0, # 6
           0xF0, 0x10, 0x20, 0x40, 0x40, # 7
           0xF0, 0x90, 0xF0, 0x90, 0xF0, # 8
           0xF0, 0x90, 0xF0, 0x10, 0xF0, # 9
           0xF0, 0x90, 0xF0, 0x90, 0x90, # A
           0xE0, 0x90, 0xE0, 0x90, 0xE0, # B
           0xF0, 0x80, 0x80, 0x80, 0xF0, # C
           0xE0, 0x90, 0x90, 0x90, 0xE0, # D
           0xF0, 0x80, 0xF0, 0x80, 0xF0, # E
           0xF0, 0x80, 0xF0, 0x80, 0x80  # F
           ]
    
#   push this to the initializing part
    
    for i in range(0,80):
        memory[i] = fonts[i]


    def loadRom(self, rom_path):
        binary = open(rom_path , "rb").read()
        for i in range(len(binary)):
            self.memory[0x200 + i] = binary[i]

    def cycle(self):
            
